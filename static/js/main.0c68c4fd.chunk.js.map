{"version":3,"sources":["config/FireBaseConfig.js","components/Pointage.js","components/MapComponent.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","Pointage","props","state","data","users","disp","db","database","ref","temp","fDate","on","snapshot","setState","Object","values","val","forEach","day","includes","getOwnPropertyNames","push","user","console","log","tempUser","Set","flat","k","leng","length","uu","Jour","time","Soir","dataSource","this","columns","title","dataIndex","key","Component","MapComponent","mapboxgl","accessToken","lng","lat","zoom","sellsmans","markers","map","Map","container","mapContainer","style","center","flyTo","speed","essential","sellsman","i","sell","van","lon","date","marker","remove","seller","popup","Popup","offset","closeButton","setHTML","Math","round","Marker","setLngLat","setPopup","addTo","width","height","position","el","App","basename","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c68c4fd.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\nvar config = {\n  apiKey: 'AIzaSyA0x29pPnGdDxJTg9BkwgAer13JQw9Lq8A',\n  authDomain: 'pointageapp-3bf1f.firebaseapp.com',\n  databaseURL: 'https://pointageapp-3bf1f.firebaseio.com',\n  projectId: 'pointageapp-3bf1f',\n  storageBucket: 'pointageapp-3bf1f.appspot.com',\n  messagingSenderId: '242803300074',\n  appId: '1:242803300074:web:aa7401e2c5a6cdabf32993',\n  measurementId: 'G-0081JXN4MV',\n};\n\n// Initialize Firebase\nfirebase.initializeApp(config);\nconst storage = firebase.storage();\nexport {storage, firebase as default};\n","import React, { Component } from \"react\";\nimport { Table, Divider, Tag } from \"antd\";\nimport firebase from \"../config/FireBaseConfig\";\nimport \"antd/dist/antd.css\";\n\nexport default class Pointage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      users: [],\n      disp: []\n    };\n  }\n  componentDidMount() {\n    let db = firebase.database().ref(\"pointage\");\n    var temp = [];\n    var fDate = [];\n    db.on(\"value\", snapshot => {\n      this.setState({ data: Object.values(snapshot.val()) });\n      snapshot.forEach(day => {\n        if (!temp.includes(Object.getOwnPropertyNames(day.val()))) {\n          temp.push(Object.getOwnPropertyNames(day.val()));\n        }\n        day.forEach(user => {\n          console.log(user.val());\n        });\n      });\n      let tempUser = [...new Set(temp.flat())];\n      let k = 1;\n      snapshot.forEach(day => {\n        let leng = Object.values(snapshot.val()).length;\n\n        tempUser.forEach(user => {\n          let ee = Object.getOwnPropertyNames(day.val());\n          if (ee[0] === user) {\n            if (k === leng) {\n              day.forEach(uu => {\n                fDate.push({\n                  user: user,\n                  Jour: uu.val()?.Jour?.time,\n                  Soir: uu.val()?.Soir?.time\n                });\n              });\n            }\n          }\n        });\n        k++;\n      });\n      this.setState({ users: tempUser, disp: fDate });\n    });\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Nom Prenom\",\n        dataIndex: \"user\",\n        key: \"user\"\n      },\n      {\n        title: \"Jour\",\n        dataIndex: \"Jour\",\n        key: \"Jour\"\n      },\n      {\n        title: \"Soir\",\n        dataIndex: \"Soir\",\n        key: \"Soir\"\n      }\n    ];\n    return <Table dataSource={this.state.disp} columns={columns} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport firebase from \"../config/FireBaseConfig\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nexport default class MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    mapboxgl.accessToken =\n      \"pk.eyJ1Ijoic2ttZXJjdXIiLCJhIjoiY2pzZ2V4ZWVoMDlpbTN5cGt6aG9ybG9kMCJ9.gM0FxuT6iOwSrRGpCjJOLA\";\n    this.state = {\n      lng: 4.756171,\n      lat: 36.054363,\n      zoom: 10,\n      sellsmans: [],\n      markers: []\n    };\n  }\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n\n    map.flyTo({\n      center: [4.756171, 36.054363],\n\n      speed: 0.4, // make the flying slow\n\n      essential: true,\n      zoom: 15\n    });\n    let sellsmans = [];\n    var markers = [];\n    let db = firebase.database().ref(\"position\");\n    db.on(\"value\", snapshot => {\n      let data = Object.values(snapshot.val());\n      console.log(\"positions\");\n      console.log(snapshot.val());\n      snapshot.forEach(sellsman => {\n        if (sellsmans.length == 0) {\n          let i = 0;\n          Object.getOwnPropertyNames(snapshot.val()).forEach(sell => {\n            console.log(sell);\n            let van = data[i]?.van ? data[i]?.van : sell;\n            sellsmans.push({\n              van: van,\n              lat: data[i].lat,\n              lon: data[i].log,\n              speed: data[i].speed,\n              date: data[i].date ? data[i].date : \"No date\"\n            });\n            i++;\n          });\n        }\n      });\n      console.log(sellsmans);\n      if (this.state.sellsmans.length == 0) {\n        this.setState({ sellsmans: sellsmans });\n      }\n      console.log(this.state.sellsmans.length);\n      if (this.state.sellsmans.length > 0) {\n        markers.forEach(marker => {\n          marker.remove();\n        });\n      }\n      this.state.sellsmans.forEach(seller => {\n        console.log(seller);\n        var popup = new mapboxgl.Popup({\n          offset: 25,\n          closeButton: false\n        }).setHTML(\n          \"<h3> VAN : \" +\n            seller.van +\n            \"</h3><h4> Vitesse : \" +\n            Math.round(seller.speed * 3.6) +\n            \"</h4><h4> Date : \" +\n            seller.date +\n            \"</h4>\"\n        );\n        /*.setText(\n            \"Van \" +\n              seller.van +\n              \" Vitesse \" +\n              Math.round(seller.speed * 3.6) +\n              \" Km/h  \" +\n              seller.date\n          )*/ var marker = new mapboxgl.Marker()\n          .setLngLat([seller.lon, seller.lat])\n          .setPopup(popup)\n          .addTo(map);\n        markers.push(marker);\n      });\n    });\n  }\n  render() {\n    return (\n      <div\n        style={{ width: \"100%\", height: \"100%\", position: \"fixed\" }}\n        ref={el => (this.mapContainer = el)}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Pointage from \"./components/Pointage\";\nimport MapComponent from \"./components/MapComponent\";\nexport default class App extends Component {\n  render() {\n    return (\n      <main>\n        <HashRouter basename=\"/\">\n          <Route path=\"/\" component={Pointage} exact />\n          <Route path=\"/map\" component={MapComponent} />\n        </HashRouter>\n      </main>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}